qt5_gui.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>
From: Humberto López León <humberto@uclv.cu>

From: Reinier Millo Sánchez <rmillo@uclv.cu>

---
 qtbase/include/QtGui/QtGuiDepends    | 4 ++++
 qtbase/src/gui/image/qxpmhandler.cpp | 8 ++++++++
 2 files changed, 12 insertions(+)
 create mode 100644 qtbase/include/QtGui/QtGuiDepends

diff --git a/qtbase/include/QtGui/QtGuiDepends b/qtbase/include/QtGui/QtGuiDepends
new file mode 100644
index 0000000..7611c06
--- /dev/null
+++ b/qtbase/include/QtGui/QtGuiDepends
@@ -0,0 +1,4 @@
+/* This file was generated by qmake with the info from <root>/src/gui/gui.pro. */
+#ifdef __cplusplus /* create empty PCH in C mode */
+#include <QtCore/QtCore>
+#endif
diff --git a/qtbase/src/gui/image/qxpmhandler.cpp b/qtbase/src/gui/image/qxpmhandler.cpp
index e9ac4a9..7b241ec 100644
--- a/qtbase/src/gui/image/qxpmhandler.cpp
+++ b/qtbase/src/gui/image/qxpmhandler.cpp
@@ -842,8 +842,16 @@ static bool read_xpm_header(
 #if defined(_MSC_VER) && _MSC_VER >= 1400 && !defined(Q_OS_WINCE)
         if (sscanf_s(buf, "%d %d %d %d", w, h, ncols, cpp) < 4)
 #else
+#ifdef Q_OS_GENODE
+    *w = QString(buf).section(" ", 0, 0, QString::SectionSkipEmpty).toInt();
+    *h = QString(buf).section(" ", 1, 1, QString::SectionSkipEmpty).toInt();
+    *ncols = QString(buf).section(" ", 2, 2, QString::SectionSkipEmpty).toInt();
+    *cpp = QString(buf).section(" ", 3, 3, QString::SectionSkipEmpty).toInt();
+    if (*w <= 0 || *h <= 0 || *ncols <= 0 || *cpp <= 0)
+#else
     if (sscanf(buf, "%d %d %d %d", w, h, ncols, cpp) < 4)
 #endif
+#endif
         return false;                                        // < 4 numbers parsed
 
     return true;
