qt5_widgets.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>
From: Humberto López León <humberto@uclv.cu>

From: Reinier Millo Sánchez <rmillo@uclv.cu>

---
 qtbase/include/QtWidgets/QtWidgetsDepends      | 5 +++++
 qtbase/src/widgets/dialogs/qfiledialog.cpp     | 2 +-
 qtbase/src/widgets/kernel/qwidgetwindow.cpp    | 2 ++
 qtbase/src/widgets/styles/qstylefactory.cpp    | 7 +++++++
 qtbase/src/widgets/widgets/qwidgetanimator.cpp | 5 +++--
 5 files changed, 18 insertions(+), 3 deletions(-)
 create mode 100644 qtbase/include/QtWidgets/QtWidgetsDepends

diff --git a/qtbase/include/QtWidgets/QtWidgetsDepends b/qtbase/include/QtWidgets/QtWidgetsDepends
new file mode 100644
index 0000000..80cfcaf
--- /dev/null
+++ b/qtbase/include/QtWidgets/QtWidgetsDepends
@@ -0,0 +1,5 @@
+/* This file was generated by qmake with the info from <root>/src/widgets/widgets.pro. */
+#ifdef __cplusplus /* create empty PCH in C mode */
+#include <QtCore/QtCore>
+#include <QtGui/QtGui>
+#endif
diff --git a/qtbase/src/widgets/dialogs/qfiledialog.cpp b/qtbase/src/widgets/dialogs/qfiledialog.cpp
index a9d5574..c4f803c 100644
--- a/qtbase/src/widgets/dialogs/qfiledialog.cpp
+++ b/qtbase/src/widgets/dialogs/qfiledialog.cpp
@@ -1110,7 +1110,7 @@ Q_AUTOTEST_EXPORT QString qt_tildeExpansion(const QString &path, bool *expanded
         userName.remove(0, 1);
 #if defined(Q_OS_VXWORKS)
         const QString homePath = QDir::homePath();
-#elif defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_OPENBSD)
+#elif defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_OPENBSD) && !defined(Q_OS_GENODE)
         passwd pw;
         passwd *tmpPw;
         char buf[200];
diff --git a/qtbase/src/widgets/kernel/qwidgetwindow.cpp b/qtbase/src/widgets/kernel/qwidgetwindow.cpp
index ba8c16e..0362f37 100644
--- a/qtbase/src/widgets/kernel/qwidgetwindow.cpp
+++ b/qtbase/src/widgets/kernel/qwidgetwindow.cpp
@@ -289,6 +289,8 @@ bool QWidgetWindow::event(QEvent *event)
     case QEvent::Show:
     case QEvent::Hide:
         return QWindow::event(event);
+    case QEvent::MetaCall:
+        return QWindow::event(event);
     case QEvent::WindowBlocked:
         qt_button_down = 0;
         break;
diff --git a/qtbase/src/widgets/styles/qstylefactory.cpp b/qtbase/src/widgets/styles/qstylefactory.cpp
index 520e303..8226dd2 100644
--- a/qtbase/src/widgets/styles/qstylefactory.cpp
+++ b/qtbase/src/widgets/styles/qstylefactory.cpp
@@ -184,6 +184,13 @@ QStringList QStyleFactory::keys()
     for (PluginKeyMap::const_iterator it = keyMap.constBegin(); it != cend; ++it)
         list.append(it.value());
 #endif
+#ifdef Q_OS_GENODE
+/* on Genode, the first style in the list gets selected by default and we want the "Fusion" style */
+#ifndef QT_NO_STYLE_FUSION
+    if (!list.contains(QLatin1String("Fusion")))
+        list << QLatin1String("Fusion");
+#endif
+#endif
 #ifndef QT_NO_STYLE_WINDOWS
     if (!list.contains(QLatin1String("Windows")))
         list << QLatin1String("Windows");
diff --git a/qtbase/src/widgets/widgets/qwidgetanimator.cpp b/qtbase/src/widgets/widgets/qwidgetanimator.cpp
index 2bed112..b7fc940 100644
--- a/qtbase/src/widgets/widgets/qwidgetanimator.cpp
+++ b/qtbase/src/widgets/widgets/qwidgetanimator.cpp
@@ -67,7 +67,8 @@ void QWidgetAnimator::abort(QWidget *w)
 void QWidgetAnimator::animationFinished()
 {
     QPropertyAnimation *anim = qobject_cast<QPropertyAnimation*>(sender());
-    abort(static_cast<QWidget*>(anim->targetObject()));
+    if (anim)
+       abort(static_cast<QWidget*>(anim->targetObject()));
 }
 #endif //QT_NO_ANIMATION
 
@@ -87,7 +88,7 @@ void QWidgetAnimator::animate(QWidget *widget, const QRect &_final_geometry, boo
     //If the QStyle has animations, animate
     if (widget->style()->styleHint(QStyle::SH_Widget_Animate, 0, widget)) {
         AnimationMap::const_iterator it = m_animation_map.constFind(widget);
-        if (it != m_animation_map.constEnd() && (*it)->endValue().toRect() == final_geometry)
+        if (it != m_animation_map.constEnd() && (*it) && (*it)->endValue().toRect() == final_geometry)
             return;
 
         QPropertyAnimation *anim = new QPropertyAnimation(widget, "geometry", widget);
